---
- name: Set facts
  run_once: true
  block:
    - name: Get loadbalancer IP
      ansible.builtin.shell:
        cmd: "dig +short loadbalancer"
      register: loadbalancer_ip

    - name: Set loadbalancer IP
      ansible.builtin.set_fact:
        loadbalancer_ip: "{{ loadbalancer_ip.stdout }}"

    - name: Print loadbalancer IP
      ansible.builtin.debug:
        msg: "Loadbalancer IP: {{ loadbalancer_ip }}"

- name: Client Authentication Configs
  delegate_to: localhost
  run_once: true
  block:
    - name: Set the CA certificate location
      ansible.builtin.set_fact:
        ca_cert: "{{ local_certs_path }}/ca.crt"

    - name: Generate a kubeconfig file for the kube-proxy service
      ansible.builtin.shell: |
        kubectl config set-cluster kubernetes-the-hard-way \
          --certificate-authority="{{ ca_cert }}" \
          --embed-certs=true \
          --server=https://{{ loadbalancer_ip }}:6443 \
          --kubeconfig="{{ local_certs_path }}/kube-proxy.kubeconfig"

        kubectl config set-credentials system:kube-proxy \
          --client-certificate="{{ local_certs_path }}/kube-proxy.crt" \
          --client-key="{{ local_certs_path }}/kube-proxy.key" \
          --embed-certs=true \
          --kubeconfig="{{ local_certs_path }}/kube-proxy.kubeconfig"

        kubectl config set-context default \
          --cluster=kubernetes-the-hard-way \
          --user=system:kube-proxy \
          --kubeconfig="{{ local_certs_path }}/kube-proxy.kubeconfig"

        kubectl config use-context default --kubeconfig="{{ local_certs_path }}/kube-proxy.kubeconfig"

    - name: Generate a kubeconfig file for the kube-controller-manager service
      ansible.builtin.shell: |
        kubectl config set-cluster kubernetes-the-hard-way \
          --certificate-authority="{{ ca_cert }}" \
          --embed-certs=true \
          --server=https://{{ loadbalancer_ip }}:6443 \
          --kubeconfig="{{ local_certs_path }}/kube-controller-manager.kubeconfig"

        kubectl config set-credentials system:kube-controller-manager \
          --client-certificate="{{ local_certs_path }}/kube-controller-manager.crt" \
          --client-key="{{ local_certs_path }}/kube-controller-manager.key" \
          --embed-certs=true \
          --kubeconfig="{{ local_certs_path }}/kube-controller-manager.kubeconfig"

        kubectl config set-context default \
          --cluster=kubernetes-the-hard-way \
          --user=system:kube-controller-manager \
          --kubeconfig="{{ local_certs_path }}/kube-controller-manager.kubeconfig"

        kubectl config use-context default --kubeconfig="{{ local_certs_path }}/kube-controller-manager.kubeconfig"

    - name: Generate a kubeconfig file for the kube-scheduler service
      ansible.builtin.shell: |
        kubectl config set-cluster kubernetes-the-hard-way \
          --certificate-authority="{{ ca_cert }}" \
          --embed-certs=true \
          --server=https://{{ loadbalancer_ip }}:6443 \
          --kubeconfig="{{ local_certs_path }}/kube-scheduler.kubeconfig"

        kubectl config set-credentials system:kube-scheduler \
          --client-certificate="{{ local_certs_path }}/kube-scheduler.crt" \
          --client-key="{{ local_certs_path }}/kube-scheduler.key" \
          --embed-certs=true \
          --kubeconfig="{{ local_certs_path }}/kube-scheduler.kubeconfig"

        kubectl config set-context default \
          --cluster=kubernetes-the-hard-way \
          --user=system:kube-scheduler \
          --kubeconfig="{{ local_certs_path }}/kube-scheduler.kubeconfig"

        kubectl config use-context default --kubeconfig="{{ local_certs_path }}/kube-scheduler.kubeconfig"

    - name: Generate a kubeconfig file for the admin user
      ansible.builtin.shell: |
        kubectl config set-cluster kubernetes-the-hard-way \
          --certificate-authority="{{ ca_cert }}" \
          --embed-certs=true \
          --server=https://127.0.0.1:6443 \
          --kubeconfig="{{ local_certs_path }}/admin.kubeconfig"

        kubectl config set-credentials admin \
          --client-certificate="{{ local_certs_path }}/admin.crt" \
          --client-key="{{ local_certs_path }}/admin.key" \
          --embed-certs=true \
          --kubeconfig="{{ local_certs_path }}/admin.kubeconfig"

        kubectl config set-context default \
          --cluster=kubernetes-the-hard-way \
          --user=admin \
          --kubeconfig="{{ local_certs_path }}/admin.kubeconfig"

        kubectl config use-context default --kubeconfig="{{ local_certs_path }}/admin.kubeconfig"
